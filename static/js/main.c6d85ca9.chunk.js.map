{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","todoItem","id","username","todoss","userId","usersFromServer","find","App","useState","selectedUser","setSelectedUser","setTitle","setTodos","isTitleError","setIsTitleError","isUserError","setIsUserError","action","method","onSubmit","event","preventDefault","trim","userName","newId","Math","max","todoElement","addedUser","prev","htmlFor","type","placeholder","value","onChange","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"oOAQaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAEED,EAFFC,KACAC,EACEF,EADFE,MAGF,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCNMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCN,EAGEM,EAHFN,KACAO,EAEED,EAFFC,MACAC,EACEF,EADFE,UAGF,OACE,0BACE,UAAS,GACTL,UAAWM,IACT,WACA,CACE,uBAAqC,IAAdD,IAL7B,UASE,oBAAIL,UAAU,kBAAd,SAAiCI,IAChCP,GACC,cAAC,EAAD,CAAUA,KAAMA,QCpBXU,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAC,GAAQ,OAAI,cAAC,EAAD,CAA4BP,KAAMO,GAAnBA,EAASC,UCXpC,G,MAAA,CACb,CACEA,GAAI,EACJb,KAAM,gBACNc,SAAU,OACVb,MAAO,qBAET,CACEY,GAAI,EACJb,KAAM,eACNc,SAAU,YACVb,MAAO,qBAET,CACEY,GAAI,EACJb,KAAM,mBACNc,SAAU,WACVb,MAAO,sBAET,CACEY,GAAI,EACJb,KAAM,mBACNc,SAAU,WACVb,MAAO,6BAET,CACEY,GAAI,EACJb,KAAM,mBACNc,SAAU,SACVb,MAAO,4BAET,CACEY,GAAI,EACJb,KAAM,uBACNc,SAAU,mBACVb,MAAO,2BAET,CACEY,GAAI,EACJb,KAAM,kBACNc,SAAU,eACVb,MAAO,0BAET,CACEY,GAAI,EACJb,KAAM,2BACNc,SAAU,gBACVb,MAAO,wBAET,CACEY,GAAI,EACJb,KAAM,kBACNc,SAAU,WACVb,MAAO,2BAET,CACEY,GAAI,GACJb,KAAM,qBACNc,SAAU,iBACVb,MAAO,4BCtCJ,IAAMc,ECrBE,CACb,CACEF,GAAI,EACJP,MAAO,qBACPC,WAAW,EACXS,OAAQ,GAEV,CACEH,GAAI,GACJP,MAAO,kBACPC,WAAW,EACXS,OAAQ,GAEV,CACEH,GAAI,EACJP,MAAO,qCACPC,WAAW,EACXS,OAAQ,IDIkCL,KAAI,SAAAN,GAAI,kCACjDA,GADiD,IAEpDN,MAZeiB,EAYDX,EAAKW,OAXDC,EAAgBC,MAAK,SAAAnB,GAAI,OAAIA,EAAKc,KAAOG,MAEvC,QAHtB,IAAiBA,KAeJG,EAAU,WACrB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOd,EAAP,KAAciB,EAAd,KACA,EAA0BH,mBAASL,GAAnC,mBAAOL,EAAP,KAAcc,EAAd,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAyCA,OACE,qBAAK1B,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,+CACA,uBACE2B,OAAO,aACPC,OAAO,OACPC,SApCiB,SAACC,GAGxB,GAFAA,EAAMC,kBAED3B,EAAM4B,SAAWb,EAIpB,OAHAK,GAAiBpB,EAAM4B,aACvBN,GAAgBP,GAKlB,IApCmBc,EAoCbC,EAAQC,KAAKC,IAAL,MAAAD,KAAI,YAAQ3B,EAAMC,KAAI,SAAA4B,GAAW,OAAIA,EAAY1B,QAAO,EAEhE2B,GAtCaL,EAsCad,EArC3BJ,EAAgBC,MAAK,SAAAnB,GAAI,OAAKA,EAAKC,OAASmC,MAAc,MAuC/DX,GAAS,SAAAiB,GAAI,4BACRA,GADQ,CAEX,CACE5B,GAAIuB,EACJ9B,QACAC,WAAW,EACXS,OAAQwB,EAAYA,EAAU3B,GAAK,KACnCd,KAAMyC,QAIVlB,EAAgB,IAChBC,EAAS,KAOL,UAKE,sBAAKrB,UAAU,QAAf,UACE,uBAAOwC,QAAQ,SAAf,oBACA,uBACE7B,GAAG,QACH8B,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOvC,EACPwC,SAxDc,SAACd,GACzBT,EAASS,EAAMe,cAAcF,OAC7BnB,GAAgB,MAwDPD,GACI,sBAAMvB,UAAU,QAAhB,qCAGP,sBAAKA,UAAU,QAAf,UACE,uBAAOwC,QAAQ,cAAf,mBACA,yBACE,UAAQ,aACR7B,GAAG,aACHgC,MAAOxB,EACPyB,SA/Da,SAACd,GACxBV,EAAgBU,EAAMe,cAAcF,OACpCjB,GAAe,IAyDP,UAME,wBAAQiB,MAAM,GAAGG,UAAQ,EAAzB,2BAEC/B,EAAgBN,KAAI,SAAAZ,GAAI,OACvB,iCAAuBA,EAAKC,MAAfD,EAAKc,UAGrBc,GACI,sBAAMzB,UAAU,QAAhB,qCAGP,wBAAQyC,KAAK,SAAS,UAAQ,eAA9B,oBAIF,cAAC,EAAD,CAAUjC,MAAOA,UElHzBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c6d85ca9.chunk.js","sourcesContent":["import React from 'react';\n\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={16}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed === true,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todoItem => <TodoInfo key={todoItem.id} todo={todoItem} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { FC, useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getUserbyName(userName: string): User | null {\n  return usersFromServer.find(user => (user.name === userName)) || null;\n}\n\nexport const todoss: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(todoss);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setIsTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.currentTarget.value);\n    setIsUserError(false);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim() || !selectedUser) {\n      setIsTitleError(!title.trim());\n      setIsUserError(!selectedUser);\n\n      return;\n    }\n\n    const newId = Math.max(...todos.map(todoElement => todoElement.id)) + 1;\n\n    const addedUser = getUserbyName(selectedUser);\n\n    setTodos(prev => ([\n      ...prev,\n      {\n        id: newId,\n        title,\n        completed: false,\n        userId: addedUser ? addedUser.id : null,\n        user: addedUser,\n      },\n    ]));\n\n    setSelectedUser('');\n    setTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <h1>Add todo form</h1>\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleFormSubmit}\n        >\n          <div className=\"field\">\n            <label htmlFor=\"#title\">Title:</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n            {isTitleError\n              && <span className=\"error\">Please enter a title</span>}\n          </div>\n\n          <div className=\"field\">\n            <label htmlFor=\"#userSelect\">User:</label>\n            <select\n              data-cy=\"userSelect\"\n              id=\"userSelect\"\n              value={selectedUser}\n              onChange={handleUserChange}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option key={user.id}>{user.name}</option>\n              ))}\n            </select>\n            {isUserError\n              && <span className=\"error\">Please choose a user</span>}\n          </div>\n\n          <button type=\"submit\" data-cy=\"submitButton\">\n            Add\n          </button>\n        </form>\n        <TodoList todos={todos} />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}